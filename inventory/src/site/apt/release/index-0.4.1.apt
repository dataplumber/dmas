~~ Copyright 2008, by the California Institute of Technology.
~~ ALL RIGHTS RESERVED. United States Government Sponsorship acknowledged.
~~
~~ $Id: index-0.4.1.apt 6277 2010-11-15 18:29:57Z thuang $

  ---
  Release Description 0.4.1
  ---
  Sean Hardman
  ---
  
Release Description 0.4.1

  This release of the Inventory Program Set is a component of the integrated release ({{{../../cm/release/index-0.4.1.html}0.4.1}}) of the PO.DAAC System. This release is intended as a test release and not an operational release. The following sections can be found in this document:

  * {{{Capabilities}Capabilities}}

  * {{{Liens}Liens}}

  * {{{System_Requirements}System Requirements}}

  * {{{Installation}Installation}}

  * {{{Operation}Operation}}

  * {{{Appendix_A_-_Requirements_Support}Appendix A - Requirements Support}}

  * {{{Appendix_B_-_Test_Status}Appendix B - Test Status}}

{Capabilities}

  This section details the new, modified and corrected capabilities that comprise this release of the Inventory Program Set. In lieu of listing the capabilities by requirement they have been summarized. For a complete list of the requirements and their support status, see {{{Appendix_A_-_Requirements_Support}Appendix A}}.

* New Capabilities

  There were no new capabilities in this release.

* Modified Capabilities

  The following capabilities have been modified for this release:

  * Database Connection

    Modified the connection pooling capability to use C3PO instead of Hibernate.

  * Database Schema Administration

    The SQL scripts for dropping, creating and loading the database schema have been modified to accommodate the following changes to the data model:

    * Moved the <echo_submit_date> and <gcmd_submit_date> columns from the <dataset_meta_history> table to the <product> table.

    * Removed the <collection_granule> table.

    * Added <start_granule_id> and <stop_granule_id> columns to the <collection_dataset> table.

    * Added the <collection_contact> table.

    * Added the <visible_flag> column to the <product> table.

[]

  * Dataset/Granule Inventory APIs

    The Dataset/Granule Inventory API was modified to accommodate the above changes to the data model as well as changes to the PO.DAAC Message structure (common-api).
    
* Corrected Capabilities

  The following capabilities were corrected in this release:
  
  * {{{https://podaac-cm.jpl.nasa.gov/trac/ticket/136}FR-136}} - Properties not overridden when defined in config file for inventory_schema.sh.

[]

  * {{{https://podaac-cm.jpl.nasa.gov/trac/ticket/141}FR-141}} - verifier.sh error

[]

  * {{{https://podaac-cm.jpl.nasa.gov/trac/ticket/146}FR-146}} - domino effect (placeholder)

{Liens}

  This section details the liens against the capabilities that have yet to be implemented or are partially implemented. In lieu of listing the liens by requirement they have been summarized. For a complete list of the requirements and their support status, see {{{Appendix_A_-_Requirements_Support}Appendix A}}.

  * {{{https://podaac-cm.jpl.nasa.gov/trac/ticket/146}FR-146}} - domino effect (placeholder)

[]

  * Metadata Standards Support

    Still need to address and/or quantify how the design of the data model meets <L3.173>, <L3.181> and <L3.188> related to external standards.

  * Performance and Scalability

    Still need to address how the design supports performance and scalability capabilities specified by <L3.266> and <L3.292>.

  * Processing History

    Still need to address the processing metadata capture capability specified by <L3.324>.

{System Requirements}

  The software contained in this program set was developed using Java and will run on any platform with a supported Java Runtime Environment (JRE). The software was specifically developed under Sun Java version 1.5 and has only been tested with this version.

  * PO.DAAC Standard Computing Environment

  This will eventually be documented on the Wiki and linked to in future releases. For now, the following software and tools should be available in the current environment:

    * Apache Ant 1.7.X

    * Apache Maven 2.0.X

    * Oracle Client 10.x

    * Perl 5.X

    * Subversion Client 1.3.X

    * Sun Java Standard Edition (J2SE) 1.5.X

[]

  Ant has been added for this release to support the new Ant-based database schema installation script. The rest of the items listed above are the same as in the last release. See the system-level {{{../../cm/release/index-0.4.0.html}release}} document for specific version numbers.

  * Oracle Database Server

  The Inventory Program Set requires an instance of the Oracle Database Server to be installed, configured for PO.DAAC and running in the current environment. This requirement should be satisfied by the PO.DAAC Oracle database administrator.

  For this release, it is not necessary to reinstall the Oracle Database Server, but the database schema utilized in the last release should be dropped and recreated per the instructions in the {{{../install/index.html}Installation}} document.

{Installation}

  This section details the procedures for installing and configuring the software in this program set. Installation is covered in a separate {{{../install/index.html}Installation}} document.

  The <collection_granule> table has been removed in this release. In order to facilitate the reloading of the database schema, this table has not been included in the drop SQL script. So, for this release there are two methods for ensuring that this table is removed:

  * The first method is to execute the <drop> command using the <inventory_schema.sh> or <inventory_schema.pl> script from the previous release (0.4.0).

  * The second method is to remove the table using your favorite Oracle SQL interface (e.g., SQLPlus, iSQLPlus, etc.) with the following SQL command:

+--
DROP TABLE collection_granule CASCADE CONSTRAINTS PURGE;
+--

{Operation}

  This section details any necessary setup and the commands for running the applications in this program set. Operation is covered in a separate {{{../operate/index.html}Operation}} document.

{Appendix A - Requirements Support}

  The capabilities in this release are detailed in the table below based on the requirements specified in the {{{https://bravo-lib.jpl.nasa.gov/docushare/dsweb/Get/Document-279402/PO.DAAC_Reqs_20070726.xls}PO.DAAC User and System Requirements}} document. The allocation of the Level 3 system requirements to the program sets is captured in the {{{https://bravo-lib.jpl.nasa.gov/docushare/dsweb/Get/Version-548802/podaac_req_alloc_20080427.xls}Level 3 Requirements Allocation}} document. The values for the Support column are defined as follows:

  * <<Full>> - The capability specified by the associated requirement has been implemented and tested at the program set level.

  * <<Partial>> - The capability has been partially implemented. The content of the Description column should provide more details.

  * <<No>> - The capability has not yet been implemented.

[]

*--+++
| <<Requirement>> | <<Support>> | <<Description>> |
*--+++
| L3.169 The PO.DAAC shall maintain the following information for every data stream.
a. Data stream name
b. Data destination
c. Data frequency
d. Expiration time
e. Source of Data (e.g. Instrument)
f. Measurement type | Partial | The specified elements map to the following table.column in the database schema: (a. dataset.short_name, b. dataset_policy.base_path, c. dataset_policy.data_frequency, d. dataset_policy.data_duration, e. sensor.short_name). Measurement type has not been captured in the data model yet. |
*--+++
| L3.170 The PO.DAAC shall register and maintain the following information for every acquired granule:
a. Granule Name.
b. Granule size (Mbytes)
c. Receipt time.
d. Data stream name
e. Status of granule push (optional)
f. Transfer time of granule to external destination host (optional)
g. Checksum value. | Partial | The specified elements map to the following table.column in the database schema: (a. granule.name, b. granule_archive.file_size, c. granule.ingest_time, d. dataset.short_name related via granule.dataset_id, g. granule_archive.checksum). Push status and transfer time have not been captured in the data model yet. |
*--+++
| L3.171 The PO.DAAC shall establish and maintain a list of the following information about data providers:
a. Institution name
b. Postal address
c. Web location
d. Primary contact person information
e. Secondary contact person information
f. Data stream name(s)
g. Data Frequency per data stream
h. Remote interface detail (e.g. host id, IP address and privileges) | Partial | The specified elements map to the following table.column in the database schema: (a. provider.short_name, b. provider_contact.address, c. provider_resource.path, d. provider_contact specified via provider_contact.role, e. provider_contact specified via provider_contact.role, f. dataset.short_name related via dataset.provider_id, g. dataset_policy.data_frequency related via dataset.provider_id). Remote interface information has not been captured in the data model yet. |
*--+++
| L3.173 The PO.DAAC shall map between the PO.DAAC data model and the following data models
a. GCMD/DIF
b. FGDC
c. ISO-11179, ISO-19115 
d. Dublin Core
e. ECHO | No | Although the design of the data model should facilitate the prescribed mapping, we have yet to implement any of these mappings in order to test out this theory. |
*--+++
| L3.181 The PO.DAAC shall produce metadata satisfying minimum quality standards. | Partial | The design of the data model specifies constraints on the metadata contained in the database schema. The scope of this requirement still needs to be determined so that a test plan can be formulated. |
*--+++
| L3.184 The PO.DAAC shall capture latency metrics on data produced. | No | Not been addressed yet. |
*--+++
| L3.188 The data model for granule-based metadata shall be implemented using a widely accepted metadata standard (e.g. ISO-19115). | Partial | Standards such as ISO-19115 and ISO-11179 have been referenced during implementation. The scope of this requirement still needs to be determined so that a test plan can be formulated. |
*--+++
| L3.190 The data model for granule-based metadata shall contain the following mandatory information:
a. Data Product name
b. Granule name
c. Version number
d. Start date
e. End date
f. Creation date
g. File size
h. File Format (compression)
j. Parameters(s)
k. Location(s)
l. Ingest date
m. Last updated date | Partial | The specified elements map to the following table.column in the database schema: (a. dataset.short_name related via granule.dataset_id, b. granule.name, c. granule.version, d. granule.start_time, e. granule.stop_time, f. granule.create_time, g. granule_archive.file_size, h. dataset_policy.compress_type related via granule.dataset_id, j. dataset_parameters related via granule.dataset_id, k. granule_reference.path, l. granule.ingest_time). |
*--+++
| L3.191 The data model for granule-based metadata shall maintain the following swath (orbit) spatial container type specific metadata extensions.
a. Inclination angle (granule override)
b. Swath width (granule override)
c. Equatorial crossing time in ascending node
d. Equatorial crossing longitude in ascending node
e. Ascending node (asc  or  desc)
f. Spatial resolution (collection level) | Partial | TBD |
*--+++
| L3.192 The data model for granule-based metadata shall maintain the following gridded (bounding rectangle) spatial container type specific metadata extensions.
a. Geolocation coordinates
b. region (e.g. global, pacific, north atlantic) | Partial | TBD |
*--+++
| L3.193 The data model for granule-based metadata shall support any of the following content-based metadata extension, where appropriate.
a. Statistical analysis
b. Data mining
c. Quality of data | No | TBD |
*--+++
| L3.194 The data model for granule-based metadata shall allow insertion of new fields. | Partial | TBD |
*--+++
| L3.196 The data model for catalog-based metadata shall be implemented using a widely accepted metadata standard (e.g. ISO-19115). | Partial | Standards such as ISO-19115 and ISO-11179 have been referenced during implementation. The scope of this requirement still needs to be determined so that a test plan can be formulated. |
*--+++
| L3.198 The data model for catalog-based metadata shall contain the following mandatory information.
a. Data Product author
b. Data Product release date
c. Data Product  title
d. Version number
e. Source name
f. Sensor name
g. Start date
h. End date
i. Geolocation coordinates
j. Region
k. Data level
l. Spatial container (e.g. gridded, swath, ellipsoid, point, line)
m. Contact information
n. Temporal resolution
o. Spatial resolution | Partial | TBD |
*--+++
| L3.199 The data model for catalog-based metadata shall maintain the following additional information.
a. External location (e.g. root location)
b. Access constraints
c. Use constraints
d. Read software location
e. Document location
f. Period (orbit/swath specific)
g. Inclination angle (orbit/swath specific)
h. Swath width (orbit/swath specific)
i. Orbit model name (orbit/swath specific)
j. Loader file info
k. FTP root path
l. Archive root path | Partial | TBD |
*--+++
| L3.200 The data model for catalog-based metadata shall be capable of handling up 10,000 products. | Partial | TBD |
*--+++
| L3.204 The PO.DAAC shall maintain a granule and catalog entries of data transferred to a long-term archive when that metadata can not be directly accessed at the long-term archive from PO.DAAC. | No | TBD |
*--+++
| L3.206 The PO.DAAC shall maintain a data dictionary which includes common vocabulary used to describe its products and services. | Partial | TBD |
*--+++
| L3.209 The PO.DAAC shall provide granule/catalog on-line search by the following selection including but not limited to:
a. Date and time
b. Parameter
c. Geolocation
d. Temporal resolution (e.g. daily, weekly, monthly)
e. Spatial resolution
f. Algorithm
g. Event-based (i.e., hurricanes, el nino, la nina)
h. Content-based (i.e., statistics, cloud cover, quality) | No | TBD |
*--+++
| L3.243 The PO.DAAC shall maintain the following required user information for single sign-on.
a. E-mail
b. Password
c. First name
d. Last name | No | TBD |
*--+++
| L3.244 The PO.DAAC shall maintain the following optional user information.
a. Affiliation
b. Location
c. Institution
d. Subscription information | No | TBD |
*--+++
| L3.262 The PO.DAAC shall provide remote database queries. | Partial | TBD |
*--+++
| L3.266 The PO.DAAC shall return database search results within 3 seconds at least 90% of the time. | No | TBD |
*--+++
| L3.287 The PO.DAAC shall provide users with electronic access to data product catalog information. | Partial | TBD |
*--+++
| L3.288 The PO.DAAC shall provide users with electronic access to inventory information. | Partial | TBD |
*--+++
| L3.292 The PO.DAAC shall be scalable for storage growth to 85 TB in 2008, 105 TB in 2009, and  and 130 TB in 2010 [according to PO.DAAC capacity plan]. | No | TBD |
*--+++
| L3.295 The PO.DAAC shall maintain algorithm information in database. | No | TBD |
*--+++
| L3.324 The PO.DAAC shall manage the processing history and source of data products. | No | TBD |
*--+++
| L3.328 The PO.DAAC shall maintain metadata for locating backup data at remote locations. | No | TBD |
*--+++
| L3.329 The PO.DAAC shall maintain information of backup data holdings stored in a separate location for retrieval. | No | TBD |
*--+++
| L3.330 The PO.DAAC shall maintain a backup schedule of all archive data. | No | TBD |
*--+++
| L3.341 The PO.DAAC shall associate read software and documentation with data products. | Partial | TBD |
*--+++
| L3.501 The PO.DAAC shall maintain the following geophysical event information:
a. Event name or ID
b. Event type
c. Temporal extent
d. Spatial extent(s) | No | TBD |
*--+++

{Appendix B - Test Status}

  This appendix details tests and test procedures for unit and program set level testing performed prior to integration and test by the development staff.

* Unit Tests

  The results of unit testing prior to deployment can be found in the {{{../surefire-report.html}Maven Surefire Report}}. Descriptions of the unit tests can be found in the {{{../testapidocs/index.html}Test JavaDocs}}.

* Program Set Tests

  TBD
